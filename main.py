import streamlit as st
import google.generativeai as genai
import os
from dotenv import load_dotenv
load_dotenv()
# Configurar tu API KEY de Gemini
genai.configure(api_key=os.environ["GOOGLE_API_KEY"])


# Inicializar modelo
model = genai.GenerativeModel("gemini-1.5-flash")



# Funci√≥n para generar caso de estudio
def generar_caso_estudio():
    prompt = (
        "Genera un caso de estudio breve y original relacionado exclusivamente con la norma ISO 9000. "
        "Debe presentar una situaci√≥n problem√°tica realista en una organizaci√≥n que lidie con aspectos de gesti√≥n de calidad."
    )
    response = model.generate_content(prompt)
    return response.text.strip()

# Funci√≥n para an√°lisis tipo auditor√≠a IA
def generar_auditoria_ia(caso_estudio):
    prompt = (
        f"Act√∫a como un auditor experto en ISO 9000. A continuaci√≥n se presenta un caso de estudio:\n\n"
        f"{caso_estudio}\n\n"
        "Realiza un an√°lisis tipo auditor√≠a de acuerdo a la norma ISO 9000. Enf√≥cate en detecci√≥n de fallas, buenas pr√°cticas y oportunidades de mejora."
    )
    response = model.generate_content(prompt)
    return response.text.strip()

# Funci√≥n para comparar an√°lisis humano vs IA
def comparar_auditorias(analisis_humano, auditoria_ia):
    prompt = (
        f"Comparar dos auditor√≠as sobre un caso de estudio relacionado con ISO 9000.\n\n"
        f"Auditor√≠a humana:\n{analisis_humano}\n\n"
        f"Auditor√≠a IA:\n{auditoria_ia}\n\n"
        "Eval√∫a cu√°l es mejor y por qu√©. Luego crea una lista de 'Checkpoints' con aspectos en los que el an√°lisis humano fall√≥, "
        "y otros en los que super√≥ al an√°lisis de IA. S√© objetivo y constructivo."
    )
    response = model.generate_content(prompt)
    return response.text.strip()

# Interfaz Streamlit
st.set_page_config(page_title="Auditor√≠a ISO 9000 con Gemini", layout="centered")

st.title("üìã Generador de Casos ISO 9000 + Auditor√≠a con IA")

# Paso 1: Generar caso de estudio
if "caso_estudio" not in st.session_state:
    st.session_state.caso_estudio = ""
if "analisis_humano" not in st.session_state:
    st.session_state.analisis_humano = ""
if "auditoria_ia" not in st.session_state:
    st.session_state.auditoria_ia = ""
if "comparacion" not in st.session_state:
    st.session_state.comparacion = ""

if st.button("üé≤ Generar Caso de Estudio ISO 9000"):
    st.session_state.caso_estudio = generar_caso_estudio()

if st.session_state.caso_estudio:
    st.subheader("Caso de Estudio Generado")
    st.markdown(st.session_state.caso_estudio)

    # Paso 2: Ingresar an√°lisis humano
    st.subheader("‚úç Tu an√°lisis (tipo auditor√≠a)")
    st.session_state.analisis_humano = st.text_area(
        "Escribe tu an√°lisis aqu√≠:", 
        value=st.session_state.analisis_humano, 
        height=200
    )

    # Paso 3: Generar auditor√≠a IA
    if st.button("ü§ñ Generar Auditor√≠a con IA"):
        st.session_state.auditoria_ia = generar_auditoria_ia(st.session_state.caso_estudio)

    if st.session_state.auditoria_ia:
        st.subheader("üîé Auditor√≠a IA")
        st.markdown(st.session_state.auditoria_ia)

    # Paso 4: Comparaci√≥n
    if st.session_state.analisis_humano and st.session_state.auditoria_ia:
        if st.button("üìä Comparar Auditor√≠as"):
            st.session_state.comparacion = comparar_auditorias(
                st.session_state.analisis_humano, 
                st.session_state.auditoria_ia
            )

    if st.session_state.comparacion:
        st.subheader("‚öñ Comparaci√≥n Final")
        st.markdown(st.session_state.comparacion)